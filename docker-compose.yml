services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: ./api
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./api:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  worker:
    build: ./worker
    command: /app/worker
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./worker:/src

  test-runner:
    build: ./test-runner
    env_file:
      - .env
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./test-runner:/tests
    working_dir: /tests
    command: pytest -q

volumes:
  pgdata:
